from Om_E_Tree.ome.handlers import system_handler, keyboard_handler, mouse_handler, vision_openai_handler

handler_map = {
    # Mouse
    "mouse.move_mouse": mouse_handler.move_mouse,
    "mouse.click_mouse": mouse_handler.click_mouse,
    "mouse.double_click_mouse": mouse_handler.double_click_mouse,
    "mouse.right_click_mouse": mouse_handler.right_click_mouse,
    "mouse.drag_mouse": mouse_handler.drag_mouse,
    "mouse.scroll_mouse": mouse_handler.scroll_mouse,
    "mouse.get_mouse_position": mouse_handler.get_mouse_position,
    "mouse.mouse_down": mouse_handler.mouse_down,
    "mouse.mouse_up": mouse_handler.mouse_up,

    # Keyboard
    "keyboard.press_key": keyboard_handler.press_key,
    "keyboard.type_text": keyboard_handler.type_text,
    "keyboard.hotkey": keyboard_handler.hotkey,
    "keyboard.key_down": keyboard_handler.key_down,
    "keyboard.key_up": keyboard_handler.key_up,
    "keyboard.write_slow": keyboard_handler.write_slow,
    "keyboard.press_keys_sequence": keyboard_handler.press_keys_sequence,
    "keyboard.copy_selected_text": keyboard_handler.copy_selected_text,
    "keyboard.paste_clipboard": keyboard_handler.paste_clipboard,
    "keyboard.refresh_browser": keyboard_handler.refresh_browser,
    "keyboard.focus_address_bar": keyboard_handler.focus_address_bar,
    "keyboard.new_tab": keyboard_handler.new_tab,
    "keyboard.close_tab": keyboard_handler.close_tab,
    "keyboard.navigate_back": keyboard_handler.navigate_back,
    "keyboard.navigate_forward": keyboard_handler.navigate_forward,
    "keyboard.hold_and_press": keyboard_handler.hold_and_press,
    "keyboard.key_hold": keyboard_handler.key_hold,
    "keyboard.type_with_delay": keyboard_handler.type_with_delay,
    "keyboard.open_spotlight": keyboard_handler.open_spotlight,
    "keyboard.switch_apps": keyboard_handler.switch_apps,
    "keyboard.lock_screen": keyboard_handler.lock_screen,
    "keyboard.screenshot": keyboard_handler.screenshot,
    "keyboard.minimize_window": keyboard_handler.minimize_window,
    "keyboard.quit_application": keyboard_handler.quit_application,

    # System
    "system.list_apps": system_handler.list_apps,
    "system.list_files": system_handler.list_files,
    "system.get_system_info": system_handler.get_system_info,
    "system.list_usb_devices": system_handler.list_usb_devices,
    "system.list_displays": system_handler.list_displays,
    "system.list_printers": system_handler.list_printers,
    "system.write_file": system_handler.write_file,
    "system.delete_file": system_handler.delete_file,
    "system.copy_file": system_handler.copy_file,
    "system.move_file": system_handler.move_file,
    "system.open_url": system_handler.open_url,
    "system.open_browser": system_handler.open_browser,
    "system.close_browser": system_handler.close_browser,
    "system.lock_screen": system_handler.lock_screen,
    "system.take_screenshot": system_handler.take_screenshot,
    "system.launch_app": system_handler.launch_app,
    "system.quit_app": system_handler.quit_app,
    "system.say_text": system_handler.say_text,
    "system.set_volume": system_handler.set_volume,
    "system.sleep_system": system_handler.sleep_system,
    "system.restart_system": system_handler.restart_system,
    "system.shutdown_system": system_handler.shutdown_system,
    "system.get_user_info": system_handler.get_user_info,
    "system.get_ip_address": system_handler.get_ip_address,
    "system.get_current_shell": system_handler.get_current_shell,
    "system.get_uptime": system_handler.get_uptime,
    "system.get_logged_in_users": system_handler.get_logged_in_users,

    # Vision - OpenAI
    "openai.describe_screen": vision_openai_handler.describe_screen,
    "openai.extract_text": vision_openai_handler.extract_text,
    "openai.locate_button": vision_openai_handler.locate_button,
    "openai.summarise_ui_structure": vision_openai_handler.summarise_ui_structure,
    "openai.classify_screen_type": vision_openai_handler.classify_screen_type,
    "openai.find_text_location": vision_openai_handler.find_text_location,
    "openai.interpret_chart_or_graph": vision_openai_handler.interpret_chart_or_graph,
    "openai.validate_visual_result": vision_openai_handler.validate_visual_result,
}
